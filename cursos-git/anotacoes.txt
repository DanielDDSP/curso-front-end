--------------------------------Curso de Git--------------------------------------

Comandos do Git
git blame - para saber quem fez alteração, e qual alteração
git clone - copiar os arquivos/repositório
git tag   - ver as versões dos arquivos
git checkout v0.1 - para verificar o arquivo na versão desejada
git diff v0.1 v0.2 - verificar a diferença entre as versões
git blame "nome_arquivo" - Para saber o autor de cada linha de um arquivo para sair basta apertar a tecla qual
git init - Inicializa um repositório criado
git ls-files - mostra os arquivos que o git controla
git status - statu atual do repositório
git commit -m "Mensagem qualquer"
git config user.name "nome" - para configurar nome
git config user.email "email" - para configurar email
git add "nome do arquivo" - adiciona o arquivo para o git controlar (arquivos novos e arquivos alterados)
git add "arquivo1 arquivo2" - para adicionar mais de um arquivo
git add "caminhoDeUmDiretorio"
git log - histórico de commits realizados


-- Configurando GITHUB para o repositório criado
git remote - mostra repositórios
git remote add "nome do repositório" + URL do GITHUB - adiciona os repositórios
git push "nome do repositório" master - manda as alterações para o repositório remoto

git branch - mostra todas as branchs
git branch "nome da branch" - cria uma nova branch
git checkout "nome da branch" - para mudar de branch
git checkout -b "nome da branch" - Cria a branch e ja entra nela 
git pull "nome do repositório" "nome da branch" - para atualizar os repositórios locais e remotos, respectivamente.
git branch -r - ver as branchs e repositórios
git mergetool --tool-help - Mostra os programas de interface gráfica para merge
git mergetool -t "nome do programa" - para instalar interface gráfica de merge
git rebase "nome da branch que tem atualizações" "nome da outra branch q quer atualizar"- atualiza uma branch com base de outra
git merge "nome da branch" - para fzer o merge
git checkout "nome do arquivo" - retorna a antiga versão do arquivo, antes de sido add e commitado.
git reset HEAD ou o a rash do commit ex"8944c8457379470aa8185093168ac614945f1de0" "nome do arquivo" - quando commitou algo e deseja voltar para a versão anterior. dps usa o comando git checkout "nome do arquivo"
git cherry-pick "rash do commit" - para fazer merge na branch com o commit que deseja, assim não colocando todos os commits.


--------------------------------Boas praticas do git------------------------------
Sempre criar uma branch "master" que vai receber todos os commits
Para cada desenvolvedor e/ou funcionalidades novas, criar uma nova branch git branch -b "nome da branch"
depois que commitar na branch local do desenvolvimento enviar para a branch master
após o commit na branch local, ir para a branch master e verificar se há commits com git pull
pegar todas as informações do git master utilizando git rebase "nome da branch"
Após realizar todas as alterçaões necessárias, enviar para o branch master, utilizando git merge "nome da branch local".
depois mandar para o repositório git push.




